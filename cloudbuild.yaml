steps:
- id: 'branch name'
  name: 'alpine'
  entrypoint: 'sh'  
  args: 
  - '-c'
  - | 
      echo "***********************"
      echo "$BRANCH_NAME"
      echo "***********************"

- id: 'tf init'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      if [ -d "environments/$BRANCH_NAME/" ]; then
        cd environments/$BRANCH_NAME
        terraform init
      else
        for dir in environments/*/
        do 
          cd ${dir}
          env=${dir%*/}
          env=${env#*/}
          echo ""
          echo "*************** TERRAFORM INIT ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          terraform init || exit 1
          cd ../../
        done
      fi 

# [START tf-plan]
- id: 'tf plan'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ -d "environments/$BRANCH_NAME/" ]; then
        cd environments/$BRANCH_NAME
        terraform plan -var-file="variables.tfvars"
      else
        for dir in environments/*/
        do 
          cd ${dir}   
          env=${dir%*/}
          env=${env#*/} 
          echo ""
          echo "*************** TERRAFOM PLAN ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          terraform plan -var-file="/workspace/variables.tfvars" || exit 1
          cd ../../
        done
      fi 
# [END tf-plan]

# [START Python Installation]
- id: 'Python Installation'
  name: 'python'
  entrypoint: 'pip'
  args: ["install", "-r", "requirements.txt", "--user"]
# [END Python Installation]   

# [START tf-apply]
- id: 'tf apply'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      echo "environments/$BRANCH_NAME"
      pwd
      if [ -d "environments/$BRANCH_NAME/" ]; then
        cd environments/$BRANCH_NAME    
        echo "*********************IF Condition**************" 
        echo "environments/$BRANCH_NAME"
        terraform apply -var-file="variables.tfvars" -auto-approve
      else
        echo "***************************** SKIPPING APPLYING ********************************"
        echo "Branch '$BRANCH_NAME' does not represent an oficial environment."
        echo "*******************************************************************************"
        echo "TERRAFORM APPLIED"
        #terraform apply -var-file="/workspace/variables.tfvars" -auto-approve || exit 1
      fi
# [END tf-apply]      

options:
  logging: CLOUD_LOGGING_ONLY
