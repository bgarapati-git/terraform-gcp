steps:
- id: 'branch name'
  name: 'alpine'
  entrypoint: 'sh'  
  args: 
  - '-c'
  - | 
      echo "***********************"
      echo "$BRANCH_NAME"
      echo "***********************"

- id: 'tf init'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      if [ -d "environments/$BRANCH_NAME/" ]; then
        echo  "firstc condition DIR  ${dir}"
        cd environments/$BRANCH_NAME
        terraform init
      else
        for dir in environments/*/
        do 
          cd ${dir}
          echo  "second condition DIR  ${dir}"
          env=${dir%*/}
          env=${env#*/}
          echo ""
          echo "*************** TERRAFORM INIT ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          terraform init || exit 1
          cd ../../
        done
      fi 

# [START tf-plan]
- id: 'tf plan'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ -d "environments/$BRANCH_NAME/" ]; then
        echo  "firstc condition DIR  ${dir}"
        cd environments/$BRANCH_NAME
        terraform plan -var-file="variables.tfvars"
      else
        for dir in environments/*/
        do 
          cd ${dir}   
          env=${dir%*/}
          echo  "second condition env  ${env}" 
          env=${env#*/} 
          echo ""
          echo "*************** TERRAFOM PLAN ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          echo "paln...."
          pwd
          ls
          terraform plan -var-file="workspace/variables.tfvars" || exit 1
          cd ../../
        done
      fi 
# [END tf-plan]

# [START tf-apply]
- id: 'tf apply'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ -d "environments/$BRANCH_NAME/" ]; then
        echo "PWDcvzvxcvzxvxzvccccccccccccccccccccccccc"
        cd environments/$BRANCH_NAME    
        terraform apply -var-file="variables.tfvars" -auto-approve
      else
        #echo "***************************** SKIPPING APPLYING *******************************"
        #echo "Branch '$BRANCH_NAME' does not represent an oficial environment."
        #echo "*******************************************************************************"
      
        cd environments/$BRANCH_NAME/terraform-gcp
        echo "PWDcvzvxcvzxvxzvccccccccccccccccccccccccc"
        pwd
        ls
        
        for dir in environments/*/
        do 
          cd ${dir}   
          env=${dir%*/}
          echo  "second condition env  ${env}" 
          env=${env#*/} 
          echo ""
          echo "*************** TERRAFOM PLAN ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          echo "appying...."
          pwd
          ls 
          terraform apply -var-file="workspace/variables.tfvars" -auto-approve || exit 1
          cd ../../
        done
      fi
# [END tf-apply]      

options:
  logging: CLOUD_LOGGING_ONLY
